<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MicroServer.Net.Dns</name>
    </assembly>
    <members>
        <member name="T:MicroServer.Net.Dns.Constants">
            <summary>
            Contains global variables for project.
            </summary>
        </member>
        <member name="M:MicroServer.Net.Dns.DnsMessageEventArgs.#ctor(MicroServer.Net.Sockets.SocketChannel,MicroServer.Net.Sockets.SocketBuffer)">
            <summary>
                Initializes a new instance of the <see cref="!:SntpMessageEventArgs"/> class.
            </summary>
            <param name="channel">Socket channel request is recived on.</param>
            <param name="data">Raw data received from socket.</param>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsMessageEventArgs.Channel">
            <summary>
                Channel for the connected client.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsMessageEventArgs.ChannelBuffer">
            <summary>
                Buffer for the connected client.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsMessageEventArgs.RequestMessage">
            <summary>
                Requested message for the connected client.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsMessageEventArgs.ResponseMessage">
            <summary>
                Response message for the connected client.
            </summary>
        </member>
        <member name="T:MicroServer.Net.Dns.DnsService">
            <summary>
            A class that serves DNS packet requests from remote clients.
            </summary>
        </member>
        <member name="M:MicroServer.Net.Dns.DnsService.Start">
            <summary>
             Starts the service listener if in a stopped state.
            </summary>
        </member>
        <member name="M:MicroServer.Net.Dns.DnsService.Stop">
            <summary>
             Stops the service listener if in started state.
            </summary>
        </member>
        <member name="M:MicroServer.Net.Dns.DnsService.OnClientConnect(System.Object,MicroServer.Net.Sockets.ClientConnectedEventArgs)">
            <summary>
             Remote client connects and makes a request.
            </summary>
        </member>
        <member name="M:MicroServer.Net.Dns.DnsService.OnClientDisconnect(System.Object,MicroServer.Net.Sockets.ClientDisconnectedEventArgs)">
            <summary>
             Remote client is disconnected.
            </summary>
        </member>
        <member name="M:MicroServer.Net.Dns.DnsService.ProcessRequest(System.Object)">
            <summary>
             Process request and send reply back to rempte client.
            </summary>
        </member>
        <member name="M:MicroServer.Net.Dns.DnsService.DnsQuery(MicroServer.Net.Dns.DnsMessageEventArgs)">
            <summary>
            A query is performed and a response is created. 
            </summary>
        </member>
        <member name="M:MicroServer.Net.Dns.DnsService.DnsError(MicroServer.Net.Dns.DnsMessageEventArgs)">
            <summary>
            A error has occured.  A server failure message is sent back to remote client. 
            </summary>
        </member>
        <member name="M:MicroServer.Net.Dns.DnsService.SendReply(MicroServer.Net.Dns.DnsMessageEventArgs)">
            <summary>
            A message is processsed and reply is sent back to remote client. 
            </summary>
        </member>
        <member name="M:MicroServer.Net.Dns.DnsService.SendRequest(MicroServer.Net.Dns.DnsMessageEventArgs)">
            <summary>
            A message was recived then forwared onto a remote name server.  
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsService.InterfaceAddress">
            <summary>
            Interface IP address.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsService.DnsSuffix">
            <summary>
            The DNS name without the hostname part.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsService.ServerName">
            <summary>
            The DNS hostname part.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsService.ZoneFile">
            <summary>
            The DNS hostname part.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsService.IsProxy">
            <summary>
            Capture domain name resolution requests and route them to other DNS servers
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsService.PrimaryServer">
            <summary>
            Primary SNTP Server address.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsService.AlternateServer">
            <summary>
             Alternate SNTP server is used if communication with primary server failed.
            </summary>
        </member>
        <member name="E:MicroServer.Net.Dns.DnsService.OnDnsMessageReceived">
            <summary>
                A sntp message was recived and processed.
            </summary>
        </member>
        <member name="E:MicroServer.Net.Dns.DnsService.OnDnsMessageSent">
            <summary>
                A sntp message was recived and processed and sent to an sntp address.
            </summary>
        </member>
        <member name="T:MicroServer.Net.Dns.ZoneCollection">
            <summary>
                Collection of parameters in a HTTP header.
            </summary>
        </member>
        <member name="M:MicroServer.Net.Dns.ZoneCollection.Add(MicroServer.Net.Dns.ResourceRecord)">
            <summary>
                Add a resource record.
            </summary>
        </member>
        <member name="M:MicroServer.Net.Dns.ZoneCollection.Exists(MicroServer.Net.Dns.ResourceRecord)">
            <summary>
                Checks if the specified resource record exists
            </summary>
            <param name="name">The resource record.</param>
            <returns><c>true</c> if found; otherwise <c>false</c>;</returns>
        </member>
        <member name="M:MicroServer.Net.Dns.ZoneCollection.Get(MicroServer.Net.Dns.ResourceRecord)">
            <summary>
                Get a resource record.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:MicroServer.Net.Dns.ZoneCollection.Get(MicroServer.Net.Dns.Question)">
            <summary>
                Get a resource record
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:MicroServer.Net.Dns.ZoneCollection.Clear">
            <summary>
                Remove all resource records.
            </summary>
        </member>
        <member name="M:MicroServer.Net.Dns.ZoneCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
                Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
                An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MicroServer.Net.Dns.ZoneCollection.Count">
            <summary>
                Gets number of resource records.
            </summary>
        </member>
        <member name="T:MicroServer.Net.Dns.DnsMessageEventHandler">
            <summary>
            Subscribe to this event to receive request messages.
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.DnsMessage.Timestamp">
            <summary>
            TimeStamp when cached.
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.DnsMessage.Header">
            <summary>
            Header record
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.DnsMessage.Questions">
            <summary>
            List of Question records.
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.DnsMessage.Answers">
            <summary>
            List of AnswerRR records.
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.DnsMessage.Authorities">
            <summary>
            List of AuthorityRR records.
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.DnsMessage.Additionals">
            <summary>
            List of AdditionalRR records.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsMessage.TransactionId">
            <summary>
            An identifier assigned by the service.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsMessage.QuestionRecordCount">
            <summary>
            the number of entries in the question section.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsMessage.AnswerRecordCount">
            <summary>
            The number of resource records in the answer section.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsMessage.AuthorityRecordCount">
            <summary>
            The number of name server resource records in the authority records section.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsMessage.AdditionalRecordCount">
            <summary>
            The number of resource records in the additional records section.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsMessage.IsAuthoritiveAnswer">
            <summary>
            Is authoritative answer (AA).
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsMessage.IsQuery">
            <summary>
            Is Query(true) or Response(false) flag (QR).
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsMessage.IsRecursionAvailable">
            <summary>
            Is Recursion Available (AA).
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsMessage.IsRecursionDesired">
            <summary>
            Is Recursion Desired (RD).
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsMessage.IsTruncated">
            <summary>
            TrunCation (TC).
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsMessage.OperationCode">
            <summary>
            Specifies type of query (OPCODE).
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.DnsMessage.ResponseCode">
            <summary>
            Specifies the response code (RCODE).
            </summary>
        </member>
        <member name="T:MicroServer.Net.Dns.Header">
            <summary>
            Header (RFC 1035 4.1.1, 1002 4.2.1)
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.Header.TransactionId">
            <summary>
            ID - A 16 bit identifier assigned by the program that
            generates any kind of query.  This identifier is copied
            the corresponding reply and can be used by the requester
            to match up replies to outstanding queries.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.Header.QDCOUNT">
            <summary>
            QDCOUNT - An unsigned 16 bit integer specifying the number of
            entries in the question section.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.Header.ANCOUNT">
            <summary>
            ANCOUNT - An unsigned 16 bit integer specifying the number of
            resource records in the answer section.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.Header.NSCOUNT">
            <summary>
            NSCOUNT - An unsigned 16 bit integer specifying the number of name
            server resource records in the authority records
            section.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.Header.ARCOUNT">
            <summary>
            ARCOUNT - An unsigned 16 bit integer specifying the number of
            resource records in the additional records section.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.Header.QR">
            <summary>
            QR - A one bit field that specifies whether this message is a
            query (true), or a response (false).
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.Header.OperationCode">
            <summary>
            OPCODE - A four bit field that specifies kind of query in this
            message.  This value is set by the originator of a query
            and copied into the response.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.Header.AuthoritiveAnswer">
            <summary>
            AA - Authoritative Answer - this bit is valid in responses, 
            and specifies that the responding name server is an
            authority for the domain name in question section.
            
            Note that the contents of the answer section may have
            multiple owner names because of aliases.  The AA bit
            corresponds to the name which matches the query name, or
            the first owner name in the answer section.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.Header.Truncated">
            <summary>
            TC - TrunCation - specifies that this message was truncated
            due to length greater than that permitted on the
            transmission channel.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.Header.RecursionDesired">
            <summary>
            RD - Recursion Desired - this bit may be set in a query and
            is copied into the response.  If RD is set, it directs
            the name server to pursue the query recursively.
            Recursive query support is optional.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.Header.RecursionAvailable">
            <summary>
            RA - Recursion Available - this be is set or cleared in a
            response, and denotes whether recursive query support is
            available in the name server.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.Header.ZReserved">
            <summary>
            Reserved for future use.  Must be zero in all queries
            and responses.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.Header.ResponseCode">
            <summary>
            RCODE - Response code - this 4 bit field is set as part of
            responses.  The values have the following
            </summary>
        </member>
        <member name="T:MicroServer.Net.Dns.RecordClass">
            <summary>
            The DNS CLASS fields appear in resource records. (RFC 1035 3.2.4)
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordClass.IN">
            <summary>
             The Internet
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordClass.CS">
            <summary>
            The CSNET class (Obsolete - used only for examples in 
            some obsolete RFCs)
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordClass.CH">
            <summary>
            The CHAOS class
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordClass.HS">
            <summary>
            Hesiod [Dyer 87]
            </summary>
        </member>
        <member name="T:MicroServer.Net.Dns.RecordType">
            <summary>
            The DNS TYPE fields are used in resource records. (RFC 1035 3.2.2)
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordType.A">
            <summary>
            A host address
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordType.NS">
            <summary>
            An authoritative name server
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordType.MD">
            <summary>
            A mail destination (Obsolete - use MX)
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordType.MF">
            <summary>
            A mail forwarder (Obsolete - use MX)
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordType.CNAME">
            <summary>
            The canonical name for an alias
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordType.SOA">
            <summary>
            Marks the start of a zone of authority
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordType.MB">
            <summary>
            A mailbox domain name (EXPERIMENTAL)
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordType.MG">
            <summary>
            A mail group member (EXPERIMENTAL)
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordType.MR">
            <summary>
            a mail rename domain name (EXPERIMENTAL)
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordType.NULL">
            <summary>
            A null RR (EXPERIMENTAL)
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordType.WKS">
            <summary>
            A well known service description
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordType.PTR">
            <summary>
            A domain name pointer
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordType.HINFO">
            <summary>
            Host information
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordType.MINFO">
            <summary>
            Mailbox or mail list information
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordType.MX">
            <summary>
            Mail exchange
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordType.TXT">
            <summary>
            Text strings
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordType.NB">
            <summary>
            NetBIOS general Name Service Resource Record
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.RecordType.NBSTAT">
            <summary>
            NetBIOS NODE STATUS Resource Record
            </summary>
        </member>
        <member name="T:MicroServer.Net.Dns.OperationCode">
            <summary>
            The Query Types (OPCODE) that specifies kind of query in a message.
            (RFC 1035 4.1.1 and 1002 4.2.1.1)
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.OperationCode.Query">
            <summary>
            A standard query (QUERY); used for NetBIOS, too
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.OperationCode.InverseQuery">
            <summary>
            An inverse query (IQUERY)
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.OperationCode.Status">
            <summary>
            A server status request (STATUS)
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.OperationCode.Reserverd3">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.OperationCode.Reserverd4">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.OperationCode.Registration">
            <summary>
            NetBIOS registration
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.OperationCode.Release">
            <summary>
            NetBIOS release
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.OperationCode.WACK">
            <summary>
            NetBIOS WACK
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.OperationCode.Refresh">
            <summary>
            NetBIOS refresh
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.OperationCode.Reserverd9">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.OperationCode.Reserverd10">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.OperationCode.Reserverd11">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.OperationCode.Reserverd12">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.OperationCode.Reserverd13">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.OperationCode.Reserverd14">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.OperationCode.Reserverd15">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="T:MicroServer.Net.Dns.ReturnCode">
            <summary>
            These are the return codes (RCODE) the server can send back. (RFC 1035 4.1.1)
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.ReturnCode.Success">
            <summary>
            No error condition
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.ReturnCode.FormatError">
            <summary>
            The name server was unable to interpret the query.
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.ReturnCode.ServerFailure">
            <summary>
            The name server was unable to process this query due to a problem 
            with the name server.
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.ReturnCode.NameError">
            <summary>
            Meaningful only for responses from an authoritative name server, 
            this code signifies that the domain name referenced in the query 
            does not exist.
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.ReturnCode.NotImplemented">
            <summary>
            The name server does not support the requested kind of query.
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.ReturnCode.Refused">
            <summary>
            The name server refuses to perform the specified operation for 
            policy reasons.  For example, a name server may not wish to provide 
            the information to the particular requester, or a name server may 
            not wish to perform a particular operation (e.g., zone transfer) 
            for particular data.
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.ReturnCode.Reserverd6">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.ReturnCode.Reserverd7">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.ReturnCode.Reserverd8">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.ReturnCode.Reserverd9">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.ReturnCode.Reserverd10">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.ReturnCode.Reserverd11">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.ReturnCode.Reserverd12">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.ReturnCode.Reserverd13">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.ReturnCode.Reserverd14">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:MicroServer.Net.Dns.ReturnCode.Reserverd15">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="M:MicroServer.Net.Dns.DnsReader.ReadString">
            <summary>
            Reads a string from the byte array. RFC 1035 strings are prefixed with a 8-bit length indicator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MicroServer.Net.Dns.DnsReader.ReadDomain">
            <summary>
            Reads a domain name from the byte array. (RFC 1035 - 4.1.4.)
            </summary>
        </member>
        <member name="M:MicroServer.Net.Dns.DnsWriter.WriteDomain(System.String)">
            <summary>
            Writs a domain name. (RFC 1035 - 4.1.4.)
            </summary>
        </member>
        <member name="T:MicroServer.Net.Dns.Question">
            <summary>
            A Question (RFC 1035 4.1.2)
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.Question.Domain">
            <summary>
            The domain name to ask for.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.Question.Type">
            <summary>
            The type of the query.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.Question.Class">
            <summary>
            The class of the query.
            </summary>
        </member>
        <member name="T:MicroServer.Net.Dns.Additional">
            <summary>
            An Additional resource record (RFC 1035 4.1)
            </summary>
        </member>
        <member name="T:MicroServer.Net.Dns.ResourceRecord">
            <summary>
            Represents a Resource Record (RFC1035 4.1.3)
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.ResourceRecord.Domain">
            <summary>
            A domain name to which this resource record pertains.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.ResourceRecord.Ttl">
            <summary>
            A 32 bit unsigned integer that specifies the time
            interval (in seconds) that the resource record may be
            cached before it should be discarded.  Zero values are
            interpreted to mean that the RR can only be used for the
            transaction in progress, and should not be cached.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.ResourceRecord.Record">
            <summary>
            RDATA
            </summary>
        </member>
        <member name="T:MicroServer.Net.Dns.Answer">
            <summary>
            An Answer resource record (RFC 1035 4.1)
            </summary>
        </member>
        <member name="T:MicroServer.Net.Dns.Authority">
            <summary>
            An Authority resource record (RFC 1035 4.1)
            </summary>
        </member>
        <member name="T:MicroServer.Net.Dns.ARecord">
            <summary>
            A Resource Record (RFC 1035 3.4.1)
            
            A records cause no additional section processing. The RDATA section of
            an A line in a master file is an Internet address expressed as four
            decimal numbers separated by dots without any imbedded spaces (e.g.,
            "10.2.0.52" or "192.0.5.6").
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.ARecord.IPAddress">
            <summary>
            A 32 bit Internet address.
            </summary>
        </member>
        <member name="T:MicroServer.Net.Dns.CNAMERecord">
            <summary>
            CNAME Resource Record (RFC 1035 3.3.1)
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.CNAMERecord.Domain">
            <summary>
            A &lt;domain-name&gt; which specifies the canonical or primary
            name for the owner. The owner name is an alias.
            </summary>
        </member>
        <member name="T:MicroServer.Net.Dns.MXRecord">
            <summary>
            MX (Mail Exchange) Resource Record (RFC 1035 3.3.9)
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.MXRecord.Preference">
            <summary>
            A &lt;domain-name&gt; which specifies a host willing to act as
            a mail exchange for the owner name.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.MXRecord.DomainName">
            <summary>
            A 16 bit integer which specifies the preference given to
            this RR among others at the same owner.  Lower values
            are preferred.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.NBRecord.IPAddress">
            <summary>
            A 32 bit Internet address.
            </summary>
        </member>
        <member name="T:MicroServer.Net.Dns.NSRecord">
            <summary>
            NS (Name Server) Resource Record (RFC 1035 3.3.11)
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.NSRecord.DomainName">
            <summary>
            A &lt;domain-name&gt; which specifies a host which should be 
            authoritative for the specified class and domain.
            </summary>
        </member>
        <member name="T:MicroServer.Net.Dns.PTRERecord">
            <summary>
            PTR Resource Record (RFC 1035 3.3.12)
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.PTRERecord.Domain">
            <summary>
            A &lt;domain-name&gt; which specifies the canonical or primary
            name for the owner. The owner name is an alias.
            </summary>
        </member>
        <member name="T:MicroServer.Net.Dns.SOARecord">
            <summary>
            SOA Resource Record (RFC 1035 3.3.13)
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.SOARecord.PrimaryNameServer">
            <summary>
            The &lt;domain-name&gt; of the name server that was the
            original or primary source of data for this zone.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.SOARecord.ResponsiblMailAddress">
            <summary>
            A &lt;domain-name&gt; which specifies the mailbox of the
            person responsible for this zone.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.SOARecord.Serial">
            <summary>
            The unsigned 32 bit version number of the original copy
            of the zone.  Zone transfers preserve this value.  This
            value wraps and should be compared using sequence space
            arithmetic.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.SOARecord.Refresh">
            <summary>
            A 32 bit time interval before the zone should be
            refreshed.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.SOARecord.Retry">
            <summary>
            A 32 bit time interval that should elapse before a
            failed refresh should be retried.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.SOARecord.Expire">
            <summary>
            A 32 bit time value that specifies the upper limit on
            the time interval that can elapse before the zone is no
            longer authoritative.
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.SOARecord.DefaultTtl">
            <summary>
            The unsigned 32 bit minimum TTL field that should be
            exported with any RR from this zone.
            </summary>
        </member>
        <member name="T:MicroServer.Net.Dns.TXTRecord">
            <summary>
            TXT Resource Record (RFC 1035 3.3.14)
            </summary>
        </member>
        <member name="P:MicroServer.Net.Dns.TXTRecord.TxtData">
            <summary>
            One or more &lt;character-string&gt;s.
            </summary>
        </member>
    </members>
</doc>
